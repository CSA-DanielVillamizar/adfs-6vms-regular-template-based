{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    // General usage parameters
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The region to deploy the resources into, e.g. East US."
      }
    },

    // Storage Accounts related parameters
    "storageAccountNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Name prefix of the new storage accounts created to store the VHDs. Three storage accounts will be created and the last one is the diagnostics storage account which will be Standard_GRS type."
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Premium_LRS",
        "Standard_LRS",
        "Standard_GRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Premium_LRS"
    },

    // Virtual Network related parameters
    "virtualNetworkUsage": {
      "type": "string",
      "metadata": {
        "description": "Indicates if a new virtual network will be created or use an existing one."
      },
      "allowedValues": [
        "existing",
        "new"
      ],
      "defaultValue": "new"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Virtual Network to Create, mandatory on both existing or new virtual network usage."
      },
      "defaultValue": "adfs-infra-vnet"
    },
    "virtualNetworkResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the resource group where the existing virtual network resides. When using an existing virtual network, this becomes a mandatory parameter so the deployment can find the ID of the existing virtual network."
      }
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the new VNET, mandatory if creating a new virtual network."
      },
      "defaultValue": "10.0.0.0/16"
    },
    "internalSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the internal subnet, mandatory on both virtual network usage options (new or existing)."
      },
      "defaultValue": "Internal-sn"
    },
    "internalSubnetAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the internal subnet, which contains the Domain Controllers and ADFS servers, mandatory if creating a new virtual network."
      },
      "defaultValue": "10.0.0.0/24"
    },
    "dmzSubnetAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the dmz subnet, which contains the Windows application proxy servers, mandatory if creating a new virtual network."
      },
      "defaultValue": "10.0.1.0/24"
    },
    "dmzSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the internal subnet, mandatory on both virtual network usage options (new or existing)."
      },
      "defaultValue": "DMZ-sn"
    },

    // NICs related parameters
    "addc01NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the first Domain Controller, this IP address will be statically assigned to the DC and must be a valid ip address within the Internal subnet."
      },
      "defaultValue": "10.0.0.101"
    },
    "addc02NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the second Domain Controller, this IP address will be statically assigned to the DC and must be a valid ip address within the Internal subnet."
      },
      "defaultValue": "10.0.0.102"
    },
    "adfs01NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the first ADFS server, this IP address will be statically assigned to the ADFS server and must be a valid ip address within the Internal subnet."
      },
      "defaultValue": "10.0.0.201"
    },
    "adfs02NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the second ADFS server, this IP address will be statically assigned to the ADFS server and must be a valid ip address within the Internal subnet."
      },
      "defaultValue": "10.0.0.202"
    },
    "wap01NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the first WAP server, this IP address will be statically assigned to the WAP server and must be a valid ip address within the DMZ subnet."
      },
      "defaultValue": "10.0.1.101"
    },
    "wap02NicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the second WAP server, this IP address will be statically assigned to the WAP server and must be a valid ip address within the DMZ subnet."
      },
      "defaultValue": "10.0.1.102"
    },

    //Load balancer settings
    "adfsLoadBalancerPrivateIpAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the ADFS load balancer, this IP address will be statically assigned to the load balancer and must be a valid ip address within the Internal subnet."
      },
      "defaultValue": "10.0.0.200"
    },
    "wapLoadBalancerPrivateIpAddress": {
      "type": "string",
      "metadata": {
        "description": "The internal IP address of the WAP load balancer, this IP address will be statically assigned to the load balancer and must be a valid ip address within the DMZ subnet."
      },
      "defaultValue": "10.0.1.100"
    },

    // VM Sizes
    "addcVMsSize": {
      "type": "string",
      "metadata": {
        "description": "The vm size of the Domain Controllers"
      },
      "defaultValue": "Standard_DS1"
    },

    "adfsVMsSize": {
      "type": "string",
      "metadata": {
        "description": "The vm size of the ADFS servers"
      },
      "defaultValue": "Standard_DS1"
    },

    "wapVMsSize": {
      "type": "string",
      "metadata": {
        "description": "The vm size of the WAP servers"
      },
      "defaultValue": "Standard_DS1"
    },

    // Password
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the local Administrator of the virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 12,
      "maxLength": 40,
      "metadata": {
        "description": "The password for the local Administrator account of the virtual machines"
      }
    }
  },
  "variables": {
    // General usage variables
    "baseUrl": "[concat(parameters('_artifactsLocation'), '/', variables('projectName'),'/Templates')]",
    "dscModulesURL": "[concat(parameters('_artifactsLocation'),'/dsc.zip')]",

    // Storage accounts variables
    "storageAccountSetupURL": "[concat(variables('baseUrl'),'/storageAccount.json',parameters('_artifactsLocationSasToken'))]",

    // Public Ips variables
    "creatingPublicIPsUrl": "[concat(variables('baseUrl'),'/creatingPublicIPs.json', parameters('_artifactsLocationSasToken'))]",
    "adpublicIPAddressName": "adpublicIP",
    "sqlpublicIPAddressName": "sqlpublicIP",
    "publicIPAddressType": "Dynamic",

    // Availability Sets variables
    "creatingAvailabilitySetsUrl": "[concat(variables('baseUrl'),'/availabilitySets.json',parameters('_artifactsLocationSasToken'))]",
    "spAvailabilitySetName": "spAvailabiltySet",
    "sqlAvailabilitySetName": "sqlAvailabiltySet",
    "adAvailabilitySetName": "adAvailabiltySet",

    // Virtual Network variables
    "vnetSetupURL": "[concat(variables('baseUrl'),'/vnet-new.json',parameters('_artifactsLocationSasToken'))]",
    "adSubnetName": "adSubnet",
    "sqlSubnetName": "sqlSubnet",
    "spSubnetName": "spSubnet",
    "subnets": [
      {
        "name": "[variables('adSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('adSubnet')]"
        }
      },
      {
        "name": "[variables('sqlSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('sqlSubnet')]"
        }
      },
      {
        "name": "[variables('spSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('spSubnet')]"
        }
      }
    ],

    // SharePoint public ip
    "SpPublicIpexisting": "[resourceId(parameters('spPublicIPRGName'),concat('Microsoft.Network','/','publicIPAddresses'),parameters('sppublicIPAddressName'))]",
    "SpPublicIpnew": "[resourceId(concat('Microsoft.Network','/','publicIPAddresses'),parameters('sppublicIPAddressName'))]",
    "SettingUpSharepointIPUrl": "[concat(variables('baseUrl'),'/publicip-',parameters('spPublicIPNewOrExisting'),'.json',parameters('_artifactsLocationSasToken'))]",
    
    // Load Balancer related variables
    "setupLBsUrl": "[concat(variables('baseUrl'),'/loadBalancers.json',parameters('_artifactsLocationSasToken'))]",
    "adLBName": "adLoadBalancer",
    "sqlLBName": "sqlLoadBalancer",
    "spLBName": "spLoadBalancer",
    "LBFE": "LBFE",
    "LBBE": "LBBE",
    "RDPNAT": "RDP",
    "spWebNAT": "spWeb",
    "spCANAT": "spCentralAdmin",
    "adPublicIpResourceId": "[resourceId(concat('Microsoft.Network','/','publicIPAddresses'),variables('adpublicIPAddressName'))]",
    "sqlPublicIpResourceId": "[resourceId(concat('Microsoft.Network','/','publicIPAddresses'),variables('sqlpublicIPAddressName'))]",

    // NICs related variables
    "creatingNICSUrl": "[concat(variables('baseUrl'),'/creatingNICS.json',parameters('_artifactsLocationSasToken'))]",
    "adNicName": "adNic",
    "sqlNicName": "sqlNic",
    "spNicName": "spNic",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "adSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('adSubnetName'))]",
    "sqlSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('sqlSubnetName'))]",
    "spSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('spSubnetName'))]",
    "adlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('adLBName'))]",
    "sqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('sqlLBName'))]",
    "splbResourceId": "[resourceId(concat('Microsoft.Network','/','loadBalancers'),variables('spLBName'))]",
    "adRDPNATRuleID": "[concat(variables('adlbID'),'/inboundNatRules/',variables('RDPNAT'))]",
    "adBEAddressPoolID": "[concat(variables('adlbID'),'/backendAddressPools/',variables('LBBE'))]",
    "sqlBEAddressPoolID": "[concat(variables('sqllbID'),'/backendAddressPools/',variables('LBBE'))]",
    "sqlRDPNATRuleID": "[concat(variables('sqllbID'),'/inboundNatRules/',variables('RDPNAT'))]",

    // Domain Controller related variables
    "ProvisioningADDomainControllerUrl": "[concat(variables('baseUrl'),'/provisioningDomainController.json',parameters('_artifactsLocationSasToken'))]",
    "adVMName": "[concat(parameters('sharepointFarmName'),'-ad')]",
    "adDataDisk": "ADDataDisk",
    "adConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",

    // SQL related variables
    "ProvisioningSQLUrl": "[concat(variables('baseUrl'),'/provisioningSQL.json',parameters('_artifactsLocationSasToken'))]",
    "sqlDataDisk": "SQLDataDisk",
    "sqlLogDisk": "SQLLogDisk",
    "sqlPreparationFunction": "PrepareSqlServer.ps1\\PrepareSqlServer",
    "sqlVMName": "[concat(parameters('sharepointFarmName'),'-sql')]",

    // SharePoint related variables
    "provisioningSharepointUrl": "[concat(variables('baseUrl'),'/provisioningSharepoint.json',parameters('_artifactsLocationSasToken'))]",
    "spVMName": "[concat(parameters('sharepointFarmName'),'-sp')]",
    "spPreparationFunction": "PrepareSharePointServer.ps1\\PrepareSharePointServer",
    "spDataDisk": "SPDataDisk",

    // Update virtual network with DNS related variables
    "vnetwithDNSTemplateUrl": "[concat(variables('baseUrl'),'/vnet-with-dns-server.json',parameters('_artifactsLocationSasToken'))]",

    // SQL Configuration related variables
    "configuringSQLUrl": "[concat(variables('baseUrl'),'/configuringSQL.json',parameters('_artifactsLocationSasToken'))]",
    "sqlConfigurationFunction": "ConfigureSqlServer.ps1\\ConfigureSqlServer",

    // SharePoint Configuration related variables
    "configuringSharepointUrl": "[concat(variables('baseUrl'),'/configuringSharepoint.json',parameters('_artifactsLocationSasToken'))]",
    "spConfigurationFunction": "ConfigureSharePointServer.ps1\\ConfigureSharePointServer",
    "configDatabaseName": "SP_Config",
    "administrationContentDatabaseName": "SP_AdminContent",
    "spFQDN": "[concat(parameters('spDNSPrefix'),'.',toLower(trim(replace(parameters('location'),' ' ,''))),'.cloudapp.azure.com')]",
    "contentDatabaseName": "spARM_Content"
  },
  "resources": [
    // Start - Storage Accounts
    {
      "name": "SettingUpStorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "storageAccountNamePrefix": {
            "value": "[parameters('storageAccountNamePrefix')]"
          }
        }
      }
    },
    // End - Storage Accounts

    // Start - PublicIP Addresses
    {
      "name": "SettingUpPublicIPs",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('creatingPublicIPsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adpublicIPAddressName": {
            "value": "[variables('adpublicIPAddressName')]"
          },
          "sqlpublicIPAddressName": {
            "value": "[variables('sqlpublicIPAddressName')]"
          },
          "publicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          }
        }
      }
    },
    // End - PublicIP Addresses

    // Start - Availability Sets
    {
      "name": "CreatingAvailabilitySets",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('CreatingAvailabilitySetsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('adAvailabilitySetName')]"
          },
          "sqlAvailabilitySetName": {
            "value": "[variables('sqlAvailabilitySetName')]"
          },
          "spAvailabilitySetName": {
            "value": "[variables('spAvailabilitySetName')]"
          }
        }
      }
    },
    // End - Availability Sets

    // Start - Virtual Network
    {
      "name": "SettingUpVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          }
        }
      }
    },
    // End - Virtual Network

    // Start - SharePoint IPs
    {
      "name": "SettingUpSharepointIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('SettingUpSharepointIPUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "publicIpAddressName": {
            "value": "[parameters('sppublicIPAddressName')]"
          },
          "publicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          },
          "dnsPrefix": {
            "value": "[parameters('spDNSPrefix')]"
          },
          "publicIpRGName": {
            "value": "[parameters('spPublicIPRGName')]"
          }
        }
      }
    },
    // End - SharePoint IPs

    // Start - Load Balancers
    {
      "name": "SettingUpLoadBalancers",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpSharepointIP",
        "Microsoft.Resources/deployments/SettingUpPublicIPs"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('setupLBsUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "spLBName": {
            "value": "[variables('spLBName')]"
          },
          "sqllbName": {
            "value": "[variables('sqlLBName')]"
          },
          "LBFE": {
            "value": "[variables('LBFE')]"
          },
          "LBBE": {
            "value": "[variables('LBBE')]"
          },
          "RDPNAT": {
            "value": "[variables('RDPNAT')]"
          },
          "spWebNAT": {
            "value": "[variables('spWebNAT')]"
          },
          "spCANAT": {
            "value": "[variables('spCANAT')]"
          },
          "adlbName": {
            "value": "[variables('adLBName')]"
          },
          "spPublicIPResourceId": {
            "value": "[variables(concat('SpPublicIP',parameters('spPublicIPNewOrExisting')))]"
          },
          "adPublicIpResourceId": {
            "value": "[variables('adPublicIpResourceId')]"
          },
          "sqlPublicIpResourceId": {
            "value": "[variables('sqlPublicIpResourceId')]"
          }
        }
      }
    },
    // End - Load-Balancers

    // Start - Network Interfaces
    {
      "name": "CreatingNetworkInterfaces",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpVirtualNetwork",
        "Microsoft.Resources/deployments/SettingUpLoadBalancers"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('creatingNICSUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adNicName": {
            "value": "[variables('adNicName')]"
          },
          "adNicIPAddress": {
            "value": "[parameters('adNicIPAddress')]"
          },
          "adSubnetRef": {
            "value": "[variables('adSubnetRef')]"
          },
          "adBEAddressPoolID": {
            "value": "[variables('adBEAddressPoolID')]"
          },
          "adRDPNATRuleID": {
            "value": "[variables('adRDPNATRuleID')]"
          },
          "sqlNicName": {
            "value": "[variables('sqlNicName')]"
          },
          "sqlSubnetRef": {
            "value": "[variables('sqlSubnetRef')]"
          },
          "sqlBEAddressPoolID": {
            "value": "[variables('sqlBEAddressPoolID')]"
          },
          "sqlRDPNATRuleID": {
            "value": "[variables('sqlRDPNATRuleID')]"
          },
          "spNicName": {
            "value": "[variables('spNicName')]"
          },
          "spSubnetRef": {
            "value": "[variables('spSubnetRef')]"
          },
          "splbResourceId": {
            "value": "[variables('splbResourceId')]"
          },
          "LBBE": {
            "value": "[variables('LBBE')]"
          },
          "RDPNAT": {
            "value": "[variables('RDPNAT')]"
          },
          "spWebNAT": {
            "value": "[variables('spWebNAT')]"
          },
          "spCANAT": {
            "value": "[variables('spCANAT')]"
          }
        }
      }
    },
    // End - Network Interfaces

    // Start - Domain Controller
    {
      "name": "ProvisioningADDomainController",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpStorageAccount",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/CreatingAvailabilitySets",
        "Microsoft.Resources/deployments/SettingUpLoadBalancers"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('ProvisioningADDomainControllerUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "adVMName": {
            "value": "[variables('adVMName')]"
          },
          "adVMSize": {
            "value": "[parameters('adVMSize')]"
          },
          "adAvailabilitySetName": {
            "value": "[variables('adAvailabilitySetName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccountNamePrefix": {
            "value": "[parameters('storageAccountNamePrefix')]"
          },
          "adDataDisk": {
            "value": "[variables('adDataDisk')]"
          },
          "adNicName": {
            "value": "[variables('adNicName')]"
          },
          "adModulesURL": {
            "value": "[variables('dscModulesURL')]"
          },
          "adConfigurationFunction": {
            "value": "[variables('adConfigurationFunction')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "sasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    },
    // End - Domain Controller

    // Start - SQL Server
    {
      "name": "ProvisioningSQLServerVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpStorageAccount",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/CreatingAvailabilitySets",
        "Microsoft.Resources/deployments/SettingUpLoadBalancers"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('ProvisioningSQLUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "sqlVMName": {
            "value": "[variables('sqlVMName')]"
          },
          "sqlVMSize": {
            "value": "[parameters('sqlVMSize')]"
          },
          "sqlAvailabilitySetName": {
            "value": "[variables('sqlAvailabilitySetName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "storageAccountNamePrefix": {
            "value": "[parameters('storageAccountNamePrefix')]"
          },
          "sqlDataDisk": {
            "value": "[variables('sqlDataDisk')]"
          },
          "sqlLogDisk": {
            "value": "[variables('sqlLogDisk')]"
          },
          "sqlNicName": {
            "value": "[variables('sqlNicName')]"
          },
          "sqlPrepareModulesURL": {
            "value": "[variables('dscModulesURL')]"
          },
          "sqlPreparationFunction": {
            "value": "[variables('sqlPreparationFunction')]"
          },
          "DNSServerAddress": {
            "value": "[parameters('adNicIPAddress')]"
          },
          "sasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    },
    // End - SQL Server

    // Start - Sharepoint
    {
      "name": "ProvisioningSharepointVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/SettingUpStorageAccount",
        "Microsoft.Resources/deployments/CreatingNetworkInterfaces",
        "Microsoft.Resources/deployments/CreatingAvailabilitySets",
        "Microsoft.Resources/deployments/SettingUpLoadBalancers"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('provisioningSharepointUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "spVMName": {
            "value": "[variables('spVMName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "spPrepareModulesURL": {
            "value": "[variables('dscModulesURL')]"
          },
          "spPreparationFunction": {
            "value": "[variables('spPreparationFunction')]"
          },
          "adminUserName": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "spVMSize": {
            "value": "[parameters('spVMSize')]"
          },
          "spAvailabilitySetName": {
            "value": "[variables('spAvailabilitySetName')]"
          },
          "spNicName": {
            "value": "[variables('spNicName')]"
          },
          "spDataDisk": {
            "value": "[variables('spDataDisk')]"
          },
          "storageAccountNamePrefix": {
            "value": "[parameters('storageAccountNamePrefix')]"
          },
          "DNSServerAddress": {
            "value": "[parameters('adNicIPAddress')]"
          },
          "sasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    },
    // End - Sharepoint

    // Start - Updating DNS to point to Domain Controller
    {
      "name": "UpdatingDNStoPrimaryADVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ProvisioningADDomainController",
        "Microsoft.Resources/deployments/ProvisioningSQLServerVM",
        "Microsoft.Resources/deployments/ProvisioningSharepointVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetwithDNSTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "subnets": {
            "value": "[variables('subnets')]"
          },
          "DNSServerAddress": {
            "value": [
              "[parameters('adNicIPAddress')]"
            ]
          }
        }
      }
    },
    // End - Updating DNS to point to Domain Controller

    // Start - Configuring SQL Server VM
    {
      "name": "ConfiguringSQLServerVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/UpdatingDNStoPrimaryADVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuringSQLUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "sqlVMName": {
            "value": "[variables('sqlVMName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "sqlConfgureModulesURL": {
            "value": "[variables('dscModulesURL')]"
          },
          "sqlConfigurationFunction": {
            "value": "[variables('sqlConfigurationFunction')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "sqlServerServiceAccountUserName": {
            "value": "[parameters('sqlServerServiceAccountUserName')]"
          },
          "sharePointSetupUserAccountUserName": {
            "value": "[parameters('sharePointSetupUserAccountUserName')]"
          },
          "sqlServerServiceAccountPassword": {
            "value": "[parameters('sqlServerServiceAccountPassword')]"
          },
          "sharePointSetupUserAccountPassword": {
            "value": "[parameters('sharePointSetupUserAccountPassword')]"
          },
          "sasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    },
    // End - Configuring SQL Server VM

    // Start - Configuring Sharepoint VM
    {
      "name": "ConfiguringSharepointVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/ConfiguringSQLServerVM"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('configuringSharepointUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "spVMName": {
            "value": "[variables('spVMName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "spConfgureModulesURL": {
            "value": "[variables('dscModulesURL')]"
          },
          "spConfigurationFunction": {
            "value": "[variables('spConfigurationFunction')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUserName": {
            "value": "[parameters('adminUsername')]"
          },
          "sharePointSetupUserAccountUserName": {
            "value": "[parameters('sharePointSetupUserAccountUserName')]"
          },
          "sharePointFarmAccountUserName": {
            "value": "[parameters('sharePointFarmAccountUserName')]"
          },
          "configDatabaseName": {
            "value": "[variables('configDatabaseName')]"
          },
          "administrationContentDatabaseName": {
            "value": "[variables('administrationContentDatabaseName')]"
          },
          "sqlVMName": {
            "value": "[variables('sqlVMName')]"
          },
          "fqdn": {
            "value": "[variables('spFQDN')]"
          },
          "contentDatabaseName": {
            "value": "[variables('contentDatabaseName')]"
          },
          "spSiteTemplateName": {
            "value": "[parameters('spSiteTemplateName')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "sharePointSetupUserAccountPassword": {
            "value": "[parameters('sharePointSetupUserAccountPassword')]"
          },
          "sharePointFarmAccountPassword": {
            "value": "[parameters('sharePointFarmAccountPassword')]"
          },
          "sharePointFarmPassphrasePassword": {
            "value": "[parameters('sharePointFarmPassphrasePassword')]"
          },
          "sharepointFarmName": {
            "value": "[parameters('sharepointFarmName')]"
          },
          "sasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          }
        }
      }
    }
    // End - Configuring Sharepoint VM
  ],
  "outputs": {
    "fqdn": {
      "value": "[variables('spFQDN')]",
      "type": "string"
    }
  }
}
